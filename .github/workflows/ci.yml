on: [push]

name: Continuous integration

jobs:
  server-build:
    name: Server Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-build-
    - uses: arduino/setup-protoc@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release
    - uses: docker/setup-buildx-action@v2
    - uses: docker/build-push-action@v4
      with:
        push: false
        context: '.'
    - uses: actions/upload-artifact@v3
      with:
        name: release-build
        path: target/release/server

  ui-build:
    name: UI Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ui/target/
        key: ${{ runner.os }}-cargo-ui-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-ui-build-
    - uses: arduino/setup-protoc@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        target: wasm32-unknown-unknown
    - run: |
        if ! command -v trunk &> /dev/null
        then
          cargo install trunk
        fi
    - run: trunk build --release
      working-directory: ui
    - uses: jakejarvis/s3-sync-action@master
      with:
        args: --delete
      env:
        AWS_S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
        AWS_ACCESS_KEY_ID: ${{ secrets.S3_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
        AWS_S3_BUCKET: ${{ secrets.S3_BUCKET }}
        SOURCE_DIR: 'ui/dist'
        DEST_DIR: ''
    - uses: actions/upload-artifact@v3
      with:
        name: ui-dist
        path: ui/dist