syntax = "proto3";

package sandbox;

import "google/protobuf/timestamp.proto";

service SandboxService {
    // for ui
    rpc OAuthLogin(OAuthLoginRequest) returns (OAuthLoginResponse) {}
    rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse) {}
    rpc GetTask(GetTaskRequest) returns (GetTaskResponse) {}
    rpc GetAllTasks(GetAllTasksRequest) returns (GetAllTasksResponse) {}

    // for workers
    rpc GetTaskToRun(GetTaskToRunRequest) returns (GetTaskToRunResponse) {}
    rpc CreateTaskAsset(CreateTaskAssetRequest) returns (CreateTaskAssetResponse) {}
    rpc UpdateTaskStatus(UpdateTaskStatusRequest) returns (UpdateTaskStatusResponse) {}
}

/* common types */
message TaskId {
    string id = 1;
}

message TaskAsset {
    string id = 1;
}

message Task {
    TaskId id = 4;
    google.protobuf.Timestamp created_at = 6;

    oneof status {
        PendingTaskDetails pending_details = 5;
        InProgressTaskDetails in_progress_details = 2;
        FinishedTaskDetails finished_details = 3;
    }

    repeated TaskAsset assets = 7;
    TaskParams params = 8;
}

message PendingTaskDetails {
}

message InProgressTaskDetails {
    uint32 current_step = 1;
    uint32 total_steps = 2;
    
    uint32 current_image = 3;
}

message FinishedTaskDetails {
}

message TaskParams {
    uint32 iterations = 1;
    uint32 number_of_images = 2;
    string prompt = 3;
}

/* requests and responses */
message OAuthLoginRequest {
    string code = 1;
    string redirect_uri = 2;
}

message OAuthLoginResponse {
    string token = 1;
}

message CreateTaskRequest {
    TaskParams params = 2;
}

message CreateTaskResponse {
    TaskId id = 1;
}

message GetTaskRequest {
    TaskId id = 1;
}

message GetTaskResponse {
    Task task = 1;
}

message GetAllTasksRequest {
}

message GetAllTasksResponse {
    repeated Task tasks = 1;
}

message GetTaskToRunRequest {
}

message GetTaskToRunResponse {
    message TaskToRun {
        TaskId id = 1;
        TaskParams params = 3;
    }

    optional TaskToRun task_to_run = 1;
}

message UpdateTaskStatusRequest {
    TaskId id = 1;

    oneof task_status {
        InProgressTaskDetails in_progress = 2;
        FinishedTaskDetails finished = 3;
    }
}

message UpdateTaskStatusResponse {
}

message CreateTaskAssetRequest {
    TaskId task_id = 1;
    bytes image = 2;
}

message CreateTaskAssetResponse {
}